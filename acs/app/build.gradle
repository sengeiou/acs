apply plugin: 'com.android.application'
apply plugin: 'bugly'

bugly {
    appId = 'ad9e556f36' // 注册时分配的App ID
    appKey = '6d5add43-146f-472e-a7f8-a9b3255cb65c' // 注册时分配的App Key
//    debug = true
    appChannel = ""
    appVersion = "${rootProject.ext.android.versionName}"
}
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //阿里路由框架配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
//            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            if (isBuildModule.toBoolean()) {
                //独立运行
                manifest.srcFile 'src/main/alone/AndroidManifest.xml'
            } else {
                //合并到宿主
                manifest.srcFile 'src/main/AndroidManifest.xml'
                resources {
                    //正式版本时，排除debug文件夹下所有调试文件
                    exclude 'src/debug/*'
                }
            }
        }
    }

    sourceSets { main { assets.srcDirs = ['src/assets', 'src/assets/'] } }

    //统一资源前缀，规范资源引用
    resourcePrefix "app_"
    dataBinding {
        enabled true
    }

    //添加如下配置
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    useLibrary'org.apache.http.legacy'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':library-base')
    //宿主项目中判断组件是否需要独立运行
//    if (isBuildModule.toBoolean()) {
//        //组件独立运行时，宿主项目直接依赖基础库，避免编译错误
//
//    }
}
